{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA,iEAAe,qBAAuB,gDAAgD;;;;;;;;;;;;;;ACAtF,iEAAe,qBAAuB,gDAAgD;;;;;;;;;;;;;;ACAtF,iEAAe,qBAAuB,gDAAgD;;;;;;;;;;;;;;ACAtF,iEAAe,qBAAuB,gDAAgD;;;;;;;;;;;;;;ACAtF,iEAAe,qBAAuB,gDAAgD;;;;;;;;;;;;;;ACAtF,iEAAe,qBAAuB,gDAAgD;;;;;;;;;;;ACAtF;;;;;;;;;;;;;;;;;;;ACA0C;AACI;AACF;AACA;;AAE5C;AACA,SAAS,yDAAS;AAClB,QAAQ,wDAAQ;AAChB,UAAU,0DAAU;AACpB,SAAS,yDAAS;AAClB;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,IAAI;AACJ,cAAc,OAAO;AACrB;AACA;;AAEO,mBAAmB,sCAAsC;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,8BAA8B,KAAK,EAAE,cAAc,OAAO,OAAO;AACjE;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtD0C;AACZ;;AAEvB;AACP;AACA;;AAEA,eAAe,2CAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,YAAY,wDAAQ;AACpB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AChCO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACRO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;ACTkD;;AAE3C;AACP;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,6DAAW;AAC/B;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;AChBO,kBAAkB,kBAAkB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpDA;AACA,aAAa,QAAQ;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,oBAAoB,GAAG;AACpC;AACO;AACP;AACA;AACA;;AAEA;AACA,SAAS,SAAS,oBAAoB,QAAQ,KAAK,KAAK;AACxD;;AAEA;;AAEA,YAAY,oBAAoB;;AAEhC,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;;;;;;UC5EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;;AClB+C;AACN;AACA;AACS;AACL;AACL;AACZ;;AAE5B;AACA,kBAAkB,4DAAO;AACzB;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,sDAAI;AACnB,mBAAmB,0DAAM,GAAG,kBAAkB;AAC9C,eAAe,sDAAI;AACnB,qBAAqB,+DAAQ;;AAE7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAU;AACvC;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA","sources":["webpack://asgard-weather/./src/images/bolt.svg","webpack://asgard-weather/./src/images/cold.svg","webpack://asgard-weather/./src/images/normal.svg","webpack://asgard-weather/./src/images/not-found.svg","webpack://asgard-weather/./src/images/rainy.svg","webpack://asgard-weather/./src/images/sunny.svg","webpack://asgard-weather/./src/styles/style.css?2394","webpack://asgard-weather/./src/components/content.js","webpack://asgard-weather/./src/components/form.js","webpack://asgard-weather/./src/components/load.js","webpack://asgard-weather/./src/components/logo.js","webpack://asgard-weather/./src/components/not-found.js","webpack://asgard-weather/./src/components/switch.js","webpack://asgard-weather/./src/services/index.js","webpack://asgard-weather/webpack/bootstrap","webpack://asgard-weather/webpack/runtime/define property getters","webpack://asgard-weather/webpack/runtime/global","webpack://asgard-weather/webpack/runtime/hasOwnProperty shorthand","webpack://asgard-weather/webpack/runtime/make namespace object","webpack://asgard-weather/webpack/runtime/publicPath","webpack://asgard-weather/./src/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"images/5d99c7db393639b9e00bd725ff86d86f.svg\";","export default __webpack_public_path__ + \"images/dab9568215b619aaf5eb15bdcac50428.svg\";","export default __webpack_public_path__ + \"images/a3a1be073ac6fffa68d35c9392cf361c.svg\";","export default __webpack_public_path__ + \"images/67edaeb6ee50d0772c60a361fa5cc5f5.svg\";","export default __webpack_public_path__ + \"images/39795b8c918740683acd5154a34f2ed0.svg\";","export default __webpack_public_path__ + \"images/82771681b4d2996c5461f40716b0b4b4.svg\";","// extracted by mini-css-extract-plugin\nexport {};","import ColdIcon from \"../images/cold.svg\";\nimport NormalIcon from \"../images/normal.svg\";\nimport RainyIcon from \"../images/rainy.svg\";\nimport SunnyIcon from \"../images/sunny.svg\";\n\nconst weatherIcons = {\n  rainy: RainyIcon,\n  cold: ColdIcon,\n  normal: NormalIcon,\n  sunny: SunnyIcon,\n};\n\nconst setCurrentTemperatureScale = ([c_temp, f_temp], currentTemperatureScale) => {\n  if (currentTemperatureScale.celsius) {\n    return `${c_temp}째C`;\n  } else {\n    return `${f_temp}째F`;\n  }\n};\n\nexport function Content({ contentData, currentTemperatureScale }) {\n  const date = new Date(contentData.localTime);\n  \n  const contentContainer = document.createElement(\"div\");\n  contentContainer.classList.add(\"content-container\");\n\n  const temperature = document.createElement(\"h2\");\n  temperature.classList.add(\"temperature\");\n  temperature.textContent = setCurrentTemperatureScale(\n    [contentData.temp_celsius, contentData.temp_fahrenheit],\n    currentTemperatureScale\n  );\n\n  const img = document.createElement(\"img\");\n  img.src = weatherIcons[contentData.weatherCategory];\n\n  const localeName = document.createElement(\"h3\");\n  const localTime = document.createElement(\"p\");\n\n  localTime.textContent = date.toLocaleDateString(undefined, {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  const city = contentData.city;\n  const region = contentData?.region ?? \"\";\n\n  localeName.textContent = `${city}${region ? `, ${region}` : \"\"}`;\n  contentContainer.append(temperature);\n  contentContainer.append(img, localeName, localTime);\n\n  return contentContainer;\n}\n","import BoltIcon from \"../images/bolt.svg\";\nimport { Logo } from \"./logo\";\n\nexport function Form() {\n  const form = document.createElement(\"form\");\n  form.classList.add(\"form\");\n\n  const logo = Logo();\n\n  const input = document.createElement(\"input\");\n  input.classList.add(\"input\");\n  input.setAttribute(\"type\", \"text\");\n  input.id = \"locale-input\";\n  input.setAttribute(\"placeholder\", \"Enter city\");\n  input.autocomplete = \"off\";\n\n  const submitBtn = document.createElement(\"button\");\n  submitBtn.classList.add(\"submit-btn\");\n\n  const img = document.createElement(\"img\");\n  img.src = BoltIcon;\n  submitBtn.appendChild(img);\n\n  form.append(input);\n  form.append(submitBtn);\n\n  const formContainer = document.createElement(\"div\");\n  formContainer.classList.add(\"form-container\");\n  formContainer.appendChild(logo);\n  formContainer.appendChild(form);\n\n  return formContainer;\n}\n","export function Load() {\n  const loadContainer = document.createElement(\"div\");\n  const load = document.createElement(\"p\");\n  load.classList.add(\"load\");\n  load.textContent = \"Loading...\";\n  loadContainer.appendChild(load);\n  loadContainer.classList.add(\"load-container\");\n  return loadContainer\n}\n","export function Logo() {\n  const logo = document.createElement('h1');\n  const span = document.createElement('span');\n  span.textContent = 'Weather';\n  logo.textContent = 'Asgard';\n  logo.appendChild(span);\n  logo.classList.add('logo');\n\n  return logo\n}","import NotFoundImg from '../images/not-found.svg';\n\nexport function NotFound() {\n  const notFoundContainer = document.createElement(\"div\");\n  notFoundContainer.classList.add(\"not-found-container\");\n\n  const notFound = document.createElement(\"h2\");\n  notFound.textContent = \"Oops, we didn't find anything!\";\n\n  const imgNotFound = document.createElement(\"img\");\n  imgNotFound.src = NotFoundImg;\n  imgNotFound.alt = \"Not Found\";\n\n  notFoundContainer.appendChild(imgNotFound);\n  notFoundContainer.appendChild(notFound);\n  return notFoundContainer\n}","export function Switch({ temperatureScale }) {\n  const switchEl = createSwitchElement();\n  const [celsiusBtn, fahrenheitBtn] = createTemperatureButtons(temperatureScale);\n\n  celsiusBtn.addEventListener(\"click\", () => {\n    toggleTemperatureScale(celsiusBtn, fahrenheitBtn);\n    temperatureScale.celsius = true;\n    temperatureScale.fahrenheit = false;\n    saveCurrentTempScale(temperatureScale)\n  });\n  fahrenheitBtn.addEventListener(\"click\", () => {\n    toggleTemperatureScale(fahrenheitBtn, celsiusBtn);\n    temperatureScale.celsius = false;\n    temperatureScale.fahrenheit = true;\n    saveCurrentTempScale(temperatureScale)\n  });\n\n  switchEl.append(celsiusBtn, fahrenheitBtn);\n\n  return switchEl;\n}\n\nfunction createSwitchElement() {\n  const switchEl = document.createElement(\"div\");\n  switchEl.classList.add(\"switch\");\n  return switchEl;\n}\n\nfunction createTemperatureButtons(temperatureScale) {\n  const celsiusBtn = createButton(\"째C\", temperatureScale.celsius);\n  const fahrenheitBtn = createButton(\"째F\", temperatureScale.fahrenheit);\n  return [celsiusBtn, fahrenheitBtn];\n}\n\nfunction createButton(text, isSelected) {\n  const button = document.createElement(\"button\");\n  button.classList.add(\"switch-btn\");\n  button.role = isSelected ? \"selected\" : \"unselected\";\n  button.textContent = text;\n  return button;\n}\n\nfunction toggleTemperatureScale(selectedButton, unselectedButton) {\n  selectedButton.role = \"selected\";\n  unselectedButton.role = \"unselected\";\n}\n\nfunction saveCurrentTempScale(temperatureScale) {\n  window.localStorage.setItem(\n    \"@asgard-weather:temp-scale\",\n    JSON.stringify(temperatureScale)\n  );\n};\n","/**\n * @typedef {Object} Weather\n * @property {string} city\n * @property {string} region\n * @property {string} localTime\n * @property {string} country\n * @property {number} temp_celsius\n * @property {number} temp_fahrenheit\n * @property {string} condition\n * @property {string} icon\n * @property {number} humidity\n * @property {string} weatherCategory\n */\n\n/**\n * Fetches the weather information for a given city.\n * \n * @param {string} city - The city to fetch the weather for.\n * @returns {Promise<Weather | {}>} A promise that resolves to the weather information.\n */\nexport const getWeather = async (city) => {\n  try {\n    const BASE_URL = \"http://api.weatherapi.com/v1\";\n    const API_KEY = \"e0902a33cee34fa39fe142014241306\";\n\n    const response = await fetch(\n      `${BASE_URL}/current.json?key=${API_KEY}&q=${city}&aqi=no`\n    );\n\n    const data = await response.json();\n\n    const { location, current } = data;\n\n    /** @type {Weather} */\n    const contentData = {\n      city: location.name,\n      region: location.region,\n      localTime: current.last_updated,\n      country: location.country,\n      temp_celsius: current.temp_c,\n      temp_fahrenheit: current.temp_f,\n      condition: current.condition.text,\n      icon: current.condition.icon,\n      humidity: current.humidity,\n    };\n\n    // Determine weather condition based on temperature and condition\n    const weatherCategory = categorizeWeather(contentData.temp_celsius, contentData.condition);\n\n    // Add the weather category to the content data\n    contentData.weatherCategory = weatherCategory;\n\n    return contentData;\n  } catch (error) {\n    // Return an empty object in case of error\n    return {};\n  }\n};\n\n/**\n * Categorizes the weather based on temperature and condition.\n * \n * @param {number} tempCelsius - The temperature in Celsius.\n * @param {string} condition - The current weather condition.\n * @returns {string} The weather category.\n */\nfunction categorizeWeather(tempCelsius, condition) {\n  if (condition.toLowerCase().includes(\"rain\")) {\n    return \"rainy\";\n  } else if (tempCelsius <= 10) {\n    return \"cold\";\n  } else if (tempCelsius > 10 && tempCelsius < 25) {\n    return \"normal\";\n  } else {\n    return \"sunny\";\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import { Content } from \"./components/content\";\nimport { Form } from \"./components/form\";\nimport { Load } from \"./components/load\";\nimport { NotFound } from \"./components/not-found\";\nimport { Switch } from \"./components/switch\";\nimport { getWeather } from \"./services\";\nimport \"./styles/style.css\";\n\nconst renderContent = (app, contentData, currentTemperatureScale) => {\n  const content = Content({\n    contentData,\n    currentTemperatureScale,\n  });\n\n  app.appendChild(content);\n};\n\nconst init = () => {\n  const app = document.querySelector(\"#app\");\n  const currentTemperatureScale = localStorage.getItem(\n    \"@asgard-weather:temp-scale\"\n  );\n \n  let temperatureScale = {\n    celsius: true,\n    fahrenheit: false,\n  };\n\n  if (currentTemperatureScale) {\n    temperatureScale = JSON.parse(currentTemperatureScale);\n  }\n\n  const form = Form();\n  const switchEl = Switch({ temperatureScale });\n  const load = Load();\n  const notFoundEl = NotFound();\n\n  form.addEventListener(\"submit\", async (event) => {\n    event.preventDefault();\n\n    const localeValue = document.getElementById(\"locale-input\").value;\n    if (!localeValue.trim()) return alert(\"Please enter a city name\");\n\n    const existingContent = app.querySelector(\".content-container\");\n    const existingNotFound = app.querySelector(\".not-found-container\");\n    if (existingContent) app.removeChild(existingContent);\n    if (existingNotFound) app.removeChild(existingNotFound);\n    app.appendChild(load);\n    try {\n      const response = await getWeather(localeValue);\n      app.removeChild(load);\n\n      if (response?.city) {\n        renderContent(app, response, temperatureScale);\n      } else {\n        app.appendChild(notFoundEl);\n      }\n    } catch (error) {\n      app.removeChild(load);\n      alert(\"Failed to fetch weather data. Please try again.\");\n    }\n  });\n\n  app.appendChild(switchEl);\n  app.appendChild(form);\n};\n\nwindow.addEventListener(\"DOMContentLoaded\", init);\n"],"names":[],"sourceRoot":""}